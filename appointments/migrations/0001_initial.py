# Generated by Django 5.0.1 on 2025-08-20 12:32

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('doctordirectory', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('appointment_date', models.DateField()),
                ('appointment_time', models.TimeField()),
                ('duration_minutes', models.PositiveIntegerField(default=30, validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(180)])),
                ('appointment_type', models.CharField(choices=[('consultation', 'General Consultation'), ('follow_up', 'Follow-up Visit'), ('emergency', 'Emergency'), ('screening', 'Health Screening'), ('vaccination', 'Vaccination'), ('test', 'Medical Test'), ('therapy', 'Therapy Session')], default='consultation', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending Confirmation'), ('confirmed', 'Confirmed'), ('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show'), ('rescheduled', 'Rescheduled')], default='pending', max_length=20)),
                ('reason_for_visit', models.TextField()),
                ('symptoms', models.TextField(blank=True)),
                ('chief_complaint', models.CharField(blank=True, max_length=200)),
                ('notes', models.TextField(blank=True)),
                ('doctor_notes', models.TextField(blank=True)),
                ('booking_method', models.CharField(choices=[('online', 'Online'), ('phone', 'Phone'), ('walk_in', 'Walk-in'), ('referral', 'Referral')], default='online', max_length=20)),
                ('consultation_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('is_paid', models.BooleanField(default=False)),
                ('payment_method', models.CharField(blank=True, choices=[('cash', 'Cash'), ('card', 'Card'), ('insurance', 'Insurance'), ('online', 'Online Payment')], max_length=20)),
                ('requires_confirmation', models.BooleanField(default=True)),
                ('confirmation_sent', models.BooleanField(default=False)),
                ('reminder_sent', models.BooleanField(default=False)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('cancellation_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('booked_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointments_booked', to=settings.AUTH_USER_MODEL)),
                ('cancelled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cancelled_appointments', to=settings.AUTH_USER_MODEL)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctor_appointments', to='doctordirectory.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_appointments', to='doctordirectory.patient')),
                ('rescheduled_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rescheduled_to', to='appointments.appointment')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_appointments', to='doctordirectory.medicalservice')),
            ],
            options={
                'ordering': ['-appointment_date', '-appointment_time'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('created', 'Created'), ('updated', 'Updated'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('rescheduled', 'Rescheduled'), ('completed', 'Completed'), ('no_show', 'Marked as No Show'), ('reminder_sent', 'Reminder Sent')], max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('old_values', models.JSONField(blank=True, default=dict)),
                ('new_values', models.JSONField(blank=True, default=dict)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='appointments.appointment')),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('is_booked', models.BooleanField(default=False)),
                ('max_appointments', models.PositiveIntegerField(default=1)),
                ('current_appointments', models.PositiveIntegerField(default=0)),
                ('is_recurring', models.BooleanField(default=False)),
                ('recurring_days', models.CharField(blank=True, help_text='Comma-separated weekday numbers (0=Monday, 6=Sunday)', max_length=20)),
                ('recurring_end_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='doctordirectory.doctor')),
            ],
            options={
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='time_slot',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointments', to='appointments.timeslot'),
        ),
        migrations.CreateModel(
            name='WaitingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_date', models.DateField()),
                ('preferred_time_start', models.TimeField(blank=True, null=True)),
                ('preferred_time_end', models.TimeField(blank=True, null=True)),
                ('appointment_type', models.CharField(choices=[('consultation', 'General Consultation'), ('follow_up', 'Follow-up Visit'), ('emergency', 'Emergency'), ('screening', 'Health Screening'), ('vaccination', 'Vaccination'), ('test', 'Medical Test'), ('therapy', 'Therapy Session')], default='consultation', max_length=20)),
                ('reason', models.TextField()),
                ('priority', models.IntegerField(default=5, help_text='1=Highest priority, 10=Lowest priority', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('is_active', models.BooleanField(default=True)),
                ('notified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waiting_list', to='doctordirectory.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waiting_list_entries', to='doctordirectory.patient')),
            ],
            options={
                'ordering': ['priority', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='AppointmentReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('whatsapp', 'WhatsApp'), ('push', 'Push Notification')], max_length=20)),
                ('scheduled_for', models.DateTimeField()),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('is_sent', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appointment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='appointments.appointment')),
            ],
            options={
                'ordering': ['scheduled_for'],
                'indexes': [models.Index(fields=['scheduled_for', 'is_sent'], name='appointment_schedul_c4e330_idx'), models.Index(fields=['appointment', 'reminder_type'], name='appointment_appoint_895d66_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='timeslot',
            index=models.Index(fields=['doctor', 'date', 'is_available'], name='appointment_doctor__aae4c6_idx'),
        ),
        migrations.AddIndex(
            model_name='timeslot',
            index=models.Index(fields=['date', 'is_available', 'is_booked'], name='appointment_date_c522e6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='timeslot',
            unique_together={('doctor', 'date', 'start_time')},
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['doctor', 'appointment_date', 'status'], name='appointment_doctor__f0e3f4_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['patient', 'appointment_date', 'status'], name='appointment_patient_90578b_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['appointment_date', 'appointment_time'], name='appointment_appoint_c5b816_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['status', 'appointment_date'], name='appointment_status_7c15d1_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['appointment_id'], name='appointment_appoint_962688_idx'),
        ),
        migrations.AddIndex(
            model_name='waitinglist',
            index=models.Index(fields=['doctor', 'preferred_date', 'is_active'], name='appointment_doctor__e2c1c8_idx'),
        ),
        migrations.AddIndex(
            model_name='waitinglist',
            index=models.Index(fields=['patient', 'is_active'], name='appointment_patient_239c52_idx'),
        ),
    ]
