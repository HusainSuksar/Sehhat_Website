# Generated by Django 5.0.1 on 2025-08-20 12:32

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('moze', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('its_id', models.CharField(blank=True, max_length=8, null=True)),
                ('specialty', models.CharField(blank=True, max_length=100, null=True)),
                ('qualification', models.TextField(blank=True, null=True)),
                ('experience_years', models.PositiveIntegerField(default=0)),
                ('verified_certificate', models.CharField(blank=True, max_length=100, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_available', models.BooleanField(default=True)),
                ('license_number', models.CharField(blank=True, max_length=50, null=True)),
                ('consultation_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('languages_spoken', models.CharField(blank=True, max_length=200, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_moze', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_doctors', to='moze.moze')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctor_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctors',
                'ordering': ['name', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='DoctorSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('max_patients', models.PositiveIntegerField(default=10)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='doctordirectory.doctor')),
            ],
            options={
                'verbose_name': 'Doctor Schedule',
                'verbose_name_plural': 'Doctor Schedules',
                'ordering': ['date', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='MedicalService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('duration_minutes', models.PositiveIntegerField(default=30)),
                ('price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_services', to='doctordirectory.doctor')),
            ],
            options={
                'verbose_name': 'Medical Service',
                'verbose_name_plural': 'Medical Services',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('blood_group', models.CharField(blank=True, choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], max_length=5, null=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=15, null=True)),
                ('medical_history', models.TextField(blank=True, null=True)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('current_medications', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='patient_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
                'ordering': ['user__first_name', 'user__last_name'],
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_date', models.DateField()),
                ('appointment_time', models.TimeField()),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('confirmed', 'Confirmed'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('no_show', 'No Show')], default='scheduled', max_length=20)),
                ('reason_for_visit', models.CharField(blank=True, max_length=200, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='doctordirectory.doctor')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='appointments', to='doctordirectory.medicalservice')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments', to='doctordirectory.patient')),
            ],
            options={
                'verbose_name': 'Appointment',
                'verbose_name_plural': 'Appointments',
                'ordering': ['-appointment_date', '-appointment_time'],
            },
        ),
        migrations.CreateModel(
            name='PatientLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_its_id', models.CharField(max_length=8, validators=[django.core.validators.RegexValidator(message='Patient ITS ID must be exactly 8 digits', regex='^\\d{8}$')])),
                ('patient_name', models.CharField(blank=True, max_length=100, null=True)),
                ('ailment', models.TextField()),
                ('symptoms', models.TextField(blank=True, null=True)),
                ('diagnosis', models.TextField(blank=True, null=True)),
                ('prescription', models.TextField(blank=True, null=True)),
                ('follow_up_required', models.BooleanField(default=False)),
                ('follow_up_date', models.DateField(blank=True, null=True)),
                ('visit_type', models.CharField(choices=[('consultation', 'Consultation'), ('follow_up', 'Follow-up'), ('emergency', 'Emergency'), ('screening', 'Screening')], default='consultation', max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('moze', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_logs', to='moze.moze')),
                ('schedule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_logs', to='doctordirectory.doctorschedule')),
                ('seen_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patient_logs', to='doctordirectory.doctor')),
            ],
            options={
                'verbose_name': 'Patient Log',
                'verbose_name_plural': 'Patient Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['is_verified', 'is_available'], name='doctordirec_is_veri_8eec7f_idx'),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['specialty'], name='doctordirec_special_d0526d_idx'),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['assigned_moze'], name='doctordirec_assigne_5d65ed_idx'),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['created_at'], name='doctordirec_created_cec12b_idx'),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['user', 'is_verified'], name='doctordirec_user_id_d021e8_idx'),
        ),
        migrations.AddIndex(
            model_name='doctor',
            index=models.Index(fields=['name'], name='doctordirec_name_9fb4bb_idx'),
        ),
        migrations.AddIndex(
            model_name='doctorschedule',
            index=models.Index(fields=['doctor', 'date'], name='doctordirec_doctor__9f8d6c_idx'),
        ),
        migrations.AddIndex(
            model_name='doctorschedule',
            index=models.Index(fields=['date', 'is_available'], name='doctordirec_date_4aeac0_idx'),
        ),
        migrations.AddIndex(
            model_name='doctorschedule',
            index=models.Index(fields=['doctor', 'is_available'], name='doctordirec_doctor__b0d15e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='doctorschedule',
            unique_together={('doctor', 'date', 'start_time')},
        ),
        migrations.AddIndex(
            model_name='medicalservice',
            index=models.Index(fields=['doctor', 'is_available'], name='doctordirec_doctor__6e44bd_idx'),
        ),
        migrations.AddIndex(
            model_name='medicalservice',
            index=models.Index(fields=['name'], name='doctordirec_name_1f25e2_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['date_of_birth'], name='doctordirec_date_of_66e3a4_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['created_at'], name='doctordirec_created_ae0349_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['doctor', 'appointment_date'], name='doctordirec_doctor__4c8b64_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['patient', 'appointment_date'], name='doctordirec_patient_ff2dd3_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['appointment_date', 'appointment_time'], name='doctordirec_appoint_de6028_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['status'], name='doctordirec_status_501a4d_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['doctor', 'status'], name='doctordirec_doctor__8f9a5b_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['created_at'], name='doctordirec_created_e4ac04_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='appointment',
            unique_together={('doctor', 'appointment_date', 'appointment_time')},
        ),
        migrations.AddIndex(
            model_name='patientlog',
            index=models.Index(fields=['patient_its_id'], name='doctordirec_patient_f797f9_idx'),
        ),
        migrations.AddIndex(
            model_name='patientlog',
            index=models.Index(fields=['seen_by', 'timestamp'], name='doctordirec_seen_by_763e0c_idx'),
        ),
        migrations.AddIndex(
            model_name='patientlog',
            index=models.Index(fields=['moze', 'timestamp'], name='doctordirec_moze_id_13fdc9_idx'),
        ),
        migrations.AddIndex(
            model_name='patientlog',
            index=models.Index(fields=['visit_type'], name='doctordirec_visit_t_ce06d3_idx'),
        ),
        migrations.AddIndex(
            model_name='patientlog',
            index=models.Index(fields=['follow_up_required'], name='doctordirec_follow__d45729_idx'),
        ),
    ]
