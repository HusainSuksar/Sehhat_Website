# Generated by Django 5.0.1 on 2025-07-21 06:08

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('moze', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EvaluationCriteria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('weight', models.FloatField(default=1.0, help_text='Weight/importance of this criteria (0.1 to 10.0)', validators=[django.core.validators.MinValueValidator(0.1), django.core.validators.MaxValueValidator(10.0)])),
                ('max_score', models.PositiveIntegerField(default=10, help_text='Maximum score for this criteria')),
                ('category', models.CharField(choices=[('infrastructure', 'Infrastructure & Facilities'), ('medical_quality', 'Medical Care Quality'), ('staff_performance', 'Staff Performance'), ('patient_satisfaction', 'Patient Satisfaction'), ('administration', 'Administration & Management'), ('safety', 'Safety & Hygiene'), ('equipment', 'Medical Equipment'), ('accessibility', 'Accessibility & Availability')], default='medical_quality', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Evaluation Criteria',
                'verbose_name_plural': 'Evaluation Criteria',
                'ordering': ['category', 'order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('evaluation_period_start', models.DateField()),
                ('evaluation_period_end', models.DateField()),
                ('score_details', models.JSONField(default=dict, help_text='Detailed scores for each criteria in JSON format')),
                ('total_score', models.FloatField(default=0.0)),
                ('max_possible_score', models.FloatField(default=0.0)),
                ('percentage_score', models.FloatField(default=0.0)),
                ('grade', models.CharField(blank=True, choices=[('A', 'A - Excellent (90-100%)'), ('B', 'B - Good (80-89%)'), ('C', 'C - Satisfactory (70-79%)'), ('D', 'D - Needs Improvement (60-69%)'), ('E', 'E - Poor (Below 60%)')], max_length=1)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('reviewed', 'Reviewed'), ('published', 'Published')], default='draft', max_length=20)),
                ('overall_comments', models.TextField(blank=True, null=True)),
                ('recommendations', models.TextField(blank=True, null=True)),
                ('action_items', models.TextField(blank=True, null=True)),
                ('evaluation_date', models.DateField(auto_now_add=True)),
                ('is_published', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('evaluator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conducted_evaluations', to=settings.AUTH_USER_MODEL)),
                ('moze', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='moze.moze')),
            ],
            options={
                'verbose_name': 'Evaluation',
                'verbose_name_plural': 'Evaluations',
                'ordering': ['-evaluation_date'],
                'unique_together': {('moze', 'evaluation_period_start', 'evaluation_period_end')},
            },
        ),
        migrations.CreateModel(
            name='EvaluationHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_name', models.CharField(max_length=100)),
                ('old_value', models.TextField(blank=True, null=True)),
                ('new_value', models.TextField(blank=True, null=True)),
                ('change_reason', models.CharField(blank=True, max_length=200, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('changed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='evaluation.evaluation')),
            ],
            options={
                'verbose_name': 'Evaluation History',
                'verbose_name_plural': 'Evaluation Histories',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='EvaluationReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_data', models.JSONField(default=dict, help_text='Compiled report data in JSON format')),
                ('pdf_report', models.FileField(blank=True, null=True, upload_to='evaluation_reports/')),
                ('excel_report', models.FileField(blank=True, null=True, upload_to='evaluation_reports/')),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('evaluation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='report', to='evaluation.evaluation')),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Evaluation Report',
                'verbose_name_plural': 'Evaluation Reports',
            },
        ),
        migrations.CreateModel(
            name='EvaluationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('criteria', models.ManyToManyField(related_name='templates', to='evaluation.evaluationcriteria')),
            ],
            options={
                'verbose_name': 'Evaluation Template',
                'verbose_name_plural': 'Evaluation Templates',
                'ordering': ['name'],
            },
        ),
    ]
