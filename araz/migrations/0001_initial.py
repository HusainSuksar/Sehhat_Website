# Generated by Django 5.0.1 on 2025-08-20 12:32

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('doctordirectory', '0001_initial'),
        ('moze', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PetitionCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#007bff', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Petition Categories',
            },
        ),
        migrations.CreateModel(
            name='PetitionStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('color', models.CharField(default='#6c757d', max_length=7)),
                ('is_final', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Petition Statuses',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='DuaAraz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_its_id', models.CharField(help_text='8-digit ITS ID of the patient', max_length=8, validators=[django.core.validators.RegexValidator(message='Patient ITS ID must be exactly 8 digits', regex='^\\d{8}$')])),
                ('patient_name', models.CharField(blank=True, max_length=100, null=True)),
                ('patient_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('patient_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('ailment', models.TextField(help_text='Description of the medical condition or concern')),
                ('symptoms', models.TextField(blank=True, help_text='Detailed symptoms', null=True)),
                ('urgency_level', models.CharField(choices=[('low', 'Low - Routine checkup'), ('medium', 'Medium - Some concern'), ('high', 'High - Urgent attention needed'), ('emergency', 'Emergency - Immediate attention required')], default='medium', max_length=20)),
                ('request_type', models.CharField(choices=[('consultation', 'Medical Consultation'), ('prescription', 'Prescription Request'), ('follow_up', 'Follow-up Appointment'), ('health_check', 'General Health Check'), ('emergency', 'Emergency Case'), ('referral', 'Specialist Referral'), ('second_opinion', 'Second Opinion'), ('home_visit', 'Home Visit Request'), ('telemedicine', 'Telemedicine Consultation'), ('laboratory', 'Laboratory Tests'), ('imaging', 'Medical Imaging'), ('therapy', 'Physical Therapy'), ('vaccination', 'Vaccination'), ('chronic_care', 'Chronic Disease Management'), ('mental_health', 'Mental Health Support'), ('nutrition', 'Nutrition Consultation'), ('dental', 'Dental Care'), ('ophthalmology', 'Eye Care'), ('pediatric', 'Pediatric Care'), ('geriatric', 'Geriatric Care'), ('womens_health', "Women's Health"), ('mens_health', "Men's Health"), ('rehabilitation', 'Rehabilitation Services'), ('pain_management', 'Pain Management'), ('allergy', 'Allergy Treatment'), ('other', 'Other')], default='consultation', max_length=30)),
                ('previous_medical_history', models.TextField(blank=True, null=True)),
                ('current_medications', models.TextField(blank=True, null=True)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('preferred_location', models.CharField(blank=True, max_length=100, null=True)),
                ('preferred_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled'), ('follow_up_required', 'Follow-up Required')], default='submitted', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('assigned_date', models.DateTimeField(blank=True, null=True)),
                ('scheduled_date', models.DateTimeField(blank=True, null=True)),
                ('admin_notes', models.TextField(blank=True, null=True)),
                ('patient_feedback', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('preferred_contact_method', models.CharField(choices=[('phone', 'Phone Call'), ('email', 'Email'), ('sms', 'SMS'), ('whatsapp', 'WhatsApp'), ('in_person', 'In Person')], default='phone', max_length=20)),
                ('assigned_doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_araz', to='doctordirectory.doctor')),
                ('patient_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submitted_araz', to=settings.AUTH_USER_MODEL)),
                ('preferred_doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requested_araz', to='doctordirectory.doctor')),
            ],
            options={
                'verbose_name': 'Dua Araz',
                'verbose_name_plural': 'Dua Araz',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ArazStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_status', models.CharField(max_length=20)),
                ('new_status', models.CharField(max_length=20)),
                ('change_reason', models.TextField(blank=True, null=True)),
                ('changed_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('changed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('araz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='araz.duaaraz')),
            ],
            options={
                'verbose_name_plural': 'Araz Status Histories',
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='ArazNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('status_update', 'Status Update'), ('assignment', 'Assignment'), ('comment', 'New Comment'), ('reminder', 'Reminder'), ('escalation', 'Escalation')], max_length=20)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('araz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='araz.duaaraz')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ArazComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('is_internal', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('araz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='araz.duaaraz')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ArazAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='araz_attachments/')),
                ('original_filename', models.CharField(default='unknown', max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('file_size', models.PositiveIntegerField(default=0, help_text='File size in bytes')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('araz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='araz.duaaraz')),
            ],
        ),
        migrations.CreateModel(
            name='Petition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('is_anonymous', models.BooleanField(default=False)),
                ('petitioner_name', models.CharField(help_text='Full name of the petitioner', max_length=200)),
                ('petitioner_mobile', models.CharField(blank=True, help_text='Mobile number of the petitioner', max_length=20)),
                ('petitioner_email', models.EmailField(blank=True, help_text='Email address of the petitioner', max_length=254)),
                ('its_id', models.CharField(blank=True, help_text='ITS ID if available', max_length=8)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_petitions', to=settings.AUTH_USER_MODEL)),
                ('moze', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='petitions', to='moze.moze')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='petitions', to='araz.petitioncategory')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PetitionAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_petitions', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='petition_assignments', to=settings.AUTH_USER_MODEL)),
                ('petition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='araz.petition')),
            ],
        ),
        migrations.CreateModel(
            name='PetitionAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='petition_attachments/')),
                ('filename', models.CharField(max_length=255)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('petition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='araz.petition')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PetitionComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('is_internal', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('petition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='araz.petition')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='PetitionUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('rejected', 'Rejected')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('petition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updates', to='araz.petition')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
