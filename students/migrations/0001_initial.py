# Generated by Django 5.0.1 on 2025-07-21 06:08

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('moze', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('its_id', models.CharField(max_length=8, unique=True, validators=[django.core.validators.RegexValidator(message='ITS ID must be exactly 8 digits', regex='^\\d{8}$')])),
                ('college', models.CharField(max_length=100)),
                ('specialization', models.CharField(max_length=100)),
                ('year_of_study', models.PositiveIntegerField(choices=[(1, 'First Year'), (2, 'Second Year'), (3, 'Third Year'), (4, 'Fourth Year'), (5, 'Fifth Year'), (6, 'Sixth Year'), (7, 'Postgraduate')], default=1)),
                ('enrollment_date', models.DateField()),
                ('expected_graduation', models.DateField(blank=True, null=True)),
                ('current_semester', models.CharField(blank=True, max_length=20, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, null=True)),
                ('nationality', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('emergency_contact_relationship', models.CharField(blank=True, max_length=50, null=True)),
                ('current_gpa', models.FloatField(blank=True, null=True)),
                ('academic_standing', models.CharField(blank=True, choices=[('excellent', 'Excellent'), ('good', 'Good'), ('satisfactory', 'Satisfactory'), ('probation', 'Academic Probation')], max_length=20, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('verification_document', models.FileField(blank=True, null=True, upload_to='student_documents/')),
                ('interests', models.TextField(blank=True, help_text='Academic and personal interests', null=True)),
                ('skills', models.TextField(blank=True, help_text='Special skills or talents', null=True)),
                ('goals', models.TextField(blank=True, help_text='Academic and career goals', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_moze', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_students', to='moze.moze')),
                ('mentor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mentored_students', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(limit_choices_to={'role': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student Profile',
                'verbose_name_plural': 'Student Profiles',
                'ordering': ['its_id'],
            },
        ),
        migrations.CreateModel(
            name='StudentMeeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meeting_date', models.DateTimeField()),
                ('duration_minutes', models.PositiveIntegerField(default=30)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('meeting_type', models.CharField(choices=[('in_person', 'In Person'), ('video_call', 'Video Call'), ('phone_call', 'Phone Call'), ('email', 'Email')], default='in_person', max_length=20)),
                ('agenda', models.TextField(blank=True, null=True)),
                ('discussion_topics', models.TextField()),
                ('outcomes', models.TextField(blank=True, null=True)),
                ('action_items', models.TextField(blank=True, null=True)),
                ('next_meeting_date', models.DateTimeField(blank=True, null=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('student_feedback', models.TextField(blank=True, null=True)),
                ('mentor_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_meetings', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meetings', to='students.studentprofile')),
            ],
            options={
                'verbose_name': 'Student Meeting',
                'verbose_name_plural': 'Student Meetings',
                'ordering': ['-meeting_date'],
            },
        ),
        migrations.CreateModel(
            name='StudentAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('achievement_type', models.CharField(choices=[('academic', 'Academic Achievement'), ('research', 'Research Achievement'), ('extracurricular', 'Extracurricular Activity'), ('volunteer', 'Volunteer Work'), ('leadership', 'Leadership Role'), ('competition', 'Competition/Contest'), ('certification', 'Certification'), ('other', 'Other')], default='academic', max_length=20)),
                ('date_achieved', models.DateField()),
                ('institution_organization', models.CharField(blank=True, max_length=200, null=True)),
                ('certificate_document', models.FileField(blank=True, null=True, upload_to='achievement_certificates/')),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_achievements', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='students.studentprofile')),
            ],
            options={
                'verbose_name': 'Student Achievement',
                'verbose_name_plural': 'Student Achievements',
                'ordering': ['-date_achieved'],
            },
        ),
        migrations.CreateModel(
            name='MentorshipRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(help_text='Why do you need mentorship?')),
                ('areas_of_interest', models.TextField(help_text='Areas where you need guidance')),
                ('preferred_meeting_frequency', models.CharField(choices=[('weekly', 'Weekly'), ('bi_weekly', 'Bi-weekly'), ('monthly', 'Monthly'), ('as_needed', 'As Needed')], default='monthly', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('under_review', 'Under Review'), ('approved', 'Approved'), ('assigned', 'Mentor Assigned'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('assigned_at', models.DateTimeField(blank=True, null=True)),
                ('admin_notes', models.TextField(blank=True, null=True)),
                ('mentor_response', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mentorship_assignments_made', to=settings.AUTH_USER_MODEL)),
                ('assigned_mentor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_mentorship_requests', to=settings.AUTH_USER_MODEL)),
                ('requested_mentor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mentorship_requests_received', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentorship_requests', to='students.studentprofile')),
            ],
            options={
                'verbose_name': 'Mentorship Request',
                'verbose_name_plural': 'Mentorship Requests',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AidRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aid_type', models.CharField(choices=[('financial', 'Financial Aid'), ('academic', 'Academic Support'), ('medical', 'Medical Assistance'), ('equipment', 'Equipment/Books'), ('transportation', 'Transportation'), ('accommodation', 'Accommodation'), ('emergency', 'Emergency Assistance'), ('other', 'Other')], default='financial', max_length=20)),
                ('amount_requested', models.DecimalField(blank=True, decimal_places=2, help_text='Amount in local currency (if applicable)', max_digits=10, null=True)),
                ('reason', models.TextField(help_text='Detailed reason for the aid request')),
                ('urgency_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('emergency', 'Emergency')], default='medium', max_length=20)),
                ('family_income', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('number_of_dependents', models.PositiveIntegerField(blank=True, null=True)),
                ('other_aid_received', models.TextField(blank=True, help_text='Other aid or scholarships received', null=True)),
                ('supporting_documents', models.FileField(blank=True, null=True, upload_to='aid_documents/')),
                ('additional_documents', models.FileField(blank=True, null=True, upload_to='aid_documents/')),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('under_review', 'Under Review'), ('additional_info_required', 'Additional Information Required'), ('approved', 'Approved'), ('partially_approved', 'Partially Approved'), ('rejected', 'Rejected'), ('disbursed', 'Aid Disbursed'), ('completed', 'Completed')], default='submitted', max_length=30)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('approved_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('review_comments', models.TextField(blank=True, null=True)),
                ('disbursement_method', models.CharField(blank=True, choices=[('bank_transfer', 'Bank Transfer'), ('cash', 'Cash'), ('check', 'Check'), ('direct_payment', 'Direct Payment to Institution'), ('in_kind', 'In-Kind Assistance')], max_length=20, null=True)),
                ('disbursement_date', models.DateField(blank=True, null=True)),
                ('disbursement_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_aid_requests', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aid_requests', to='students.studentprofile')),
            ],
            options={
                'verbose_name': 'Aid Request',
                'verbose_name_plural': 'Aid Requests',
                'ordering': ['-created_at'],
            },
        ),
    ]
